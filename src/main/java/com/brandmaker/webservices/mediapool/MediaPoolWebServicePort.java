
package com.brandmaker.webservices.mediapool;

import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MediaPoolWebServicePort", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MediaPoolWebServicePort {


    /**
     * 
     * @param webPublishedMediaData
     * @return
     *     returns com.brandmaker.webservices.mediapool.WebPublishedMediaResult
     */
    @WebMethod(action = "webPublishedMedia")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "webPublishedMedia", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.WebPublishedMedia")
    @ResponseWrapper(localName = "webPublishedMediaResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.WebPublishedMediaResponse")
    WebPublishedMediaResult webPublishedMedia(
            @WebParam(name = "webPublishedMediaData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    WebPublishedMediaArgument webPublishedMediaData);

    /**
     * 
     * @param mediaGuid
     * @return
     *     returns java.util.List<com.brandmaker.webservices.mediapool.ExternalDownloadLink>
     */
    @WebMethod(action = "findExternalDownloadLinkByMediaGuid")
    @WebResult(name = "externalDownloadLinks", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "findExternalDownloadLinkByMediaGuid", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.FindExternalDownloadLinkByMediaGuid")
    @ResponseWrapper(localName = "findExternalDownloadLinkByMediaGuidResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.FindExternalDownloadLinkByMediaGuidResponse")
    List<ExternalDownloadLink> findExternalDownloadLinkByMediaGuid(
            @WebParam(name = "mediaGuid", targetNamespace = "")
                    Integer mediaGuid);

    /**
     * 
     * @param deleteMediaData
     * @return
     *     returns com.brandmaker.webservices.mediapool.DeleteMediaResult
     */
    @WebMethod(action = "deleteMedia")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "deleteMedia", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteMedia")
    @ResponseWrapper(localName = "deleteMediaResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteMediaResponse")
    DeleteMediaResult deleteMedia(
            @WebParam(name = "deleteMediaData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    DeleteMediaArgument deleteMediaData);

    /**
     * 
     * @param fileName
     * @param fileData
     * @return
     *     returns com.brandmaker.webservices.mediapool.UploadMediaResult
     */
    @WebMethod(action = "uploadMediaAsStream")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "uploadMediaAsStream", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaAsStream")
    @ResponseWrapper(localName = "uploadMediaAsStreamResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaAsStreamResponse")
    UploadMediaResult uploadMediaAsStream(
            @WebParam(name = "fileName", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    String fileName,
            @WebParam(name = "fileData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    DataHandler fileData);

    /**
     * 
     * @param uploadMetaData
     * @return
     *     returns com.brandmaker.webservices.mediapool.UploadMetadataResult
     */
    @WebMethod(action = "uploadMetaData")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "uploadMetaData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMetaData")
    @ResponseWrapper(localName = "uploadMetaDataResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMetaDataResponse")
    UploadMetadataResult uploadMetaData(
            @WebParam(name = "uploadMetaData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    UploadMetadataArgument uploadMetaData);

    /**
     * 
     * @param mediaDetailsData
     * @return
     *     returns com.brandmaker.webservices.mediapool.GetMediaDetailsResult
     */
    @WebMethod(action = "getMediaDetails")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "getMediaDetails", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.GetMediaDetails")
    @ResponseWrapper(localName = "getMediaDetailsResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.GetMediaDetailsResponse")
    GetMediaDetailsResult getMediaDetails(
            @WebParam(name = "mediaDetailsData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    GetMediaDetailsArgument mediaDetailsData);

    /**
     * 
     * @param link
     */
    @WebMethod(action = "updateExternalDownloadLink")
    @RequestWrapper(localName = "updateExternalDownloadLink", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UpdateExternalDownloadLink")
    @ResponseWrapper(localName = "updateExternalDownloadLinkResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UpdateExternalDownloadLinkResponse")
    void updateExternalDownloadLink(
            @WebParam(name = "link", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    ExternalDownloadLink link);

    /**
     * 
     * @param mediaGuidByHashData
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getMediaGuidByHash")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "getMediaGuidByHash", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.GetMediaGuidByHash")
    @ResponseWrapper(localName = "getMediaGuidByHashResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.GetMediaGuidByHashResponse")
    String getMediaGuidByHash(
            @WebParam(name = "mediaGuidByHashData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    String mediaGuidByHashData);

    /**
     * 
     * @param fileName
     * @param mediaGuid
     * @param fileData
     * @param comment
     * @return
     *     returns com.brandmaker.webservices.mediapool.UploadMediaVersionResult
     */
    @WebMethod(action = "uploadMediaVersionAsStream")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "uploadMediaVersionAsStream", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaVersionAsStream")
    @ResponseWrapper(localName = "uploadMediaVersionAsStreamResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaVersionAsStreamResponse")
    UploadMediaVersionResult uploadMediaVersionAsStream(
            @WebParam(name = "mediaGuid", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    String mediaGuid,
            @WebParam(name = "comment", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    String comment,
            @WebParam(name = "fileName", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    String fileName,
            @WebParam(name = "fileData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    DataHandler fileData);

    /**
     * 
     * @param mediaGuid
     * @param description
     * @param label
     * @param url
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(action = "addExternalDownloadLink")
    @WebResult(name = "linkId", targetNamespace = "")
    @RequestWrapper(localName = "addExternalDownloadLink", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.AddExternalDownloadLink")
    @ResponseWrapper(localName = "addExternalDownloadLinkResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.AddExternalDownloadLinkResponse")
    Integer addExternalDownloadLink(
            @WebParam(name = "mediaGuid", targetNamespace = "")
                    Integer mediaGuid,
            @WebParam(name = "url", targetNamespace = "")
                    String url,
            @WebParam(name = "label", targetNamespace = "")
                    String label,
            @WebParam(name = "description", targetNamespace = "")
                    String description);

    /**
     * 
     * @param linkId
     */
    @WebMethod(action = "deleteExternalDownloadLinkById")
    @RequestWrapper(localName = "deleteExternalDownloadLinkById", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteExternalDownloadLinkById")
    @ResponseWrapper(localName = "deleteExternalDownloadLinkByIdResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteExternalDownloadLinkByIdResponse")
    void deleteExternalDownloadLinkById(
            @WebParam(name = "linkId", targetNamespace = "")
                    Integer linkId);

    /**
     * 
     * @param uploadMediaVersionData
     * @return
     *     returns com.brandmaker.webservices.mediapool.UploadMediaVersionResult
     */
    @WebMethod(action = "uploadMediaVersion")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "uploadMediaVersion", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaVersion")
    @ResponseWrapper(localName = "uploadMediaVersionResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaVersionResponse")
    UploadMediaVersionResult uploadMediaVersion(
            @WebParam(name = "uploadMediaVersionData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    UploadMediaVersionArgument uploadMediaVersionData);

    /**
     * 
     * @param setOfficialArgument
     * @return
     *     returns com.brandmaker.webservices.mediapool.SetOfficialResult
     */
    @WebMethod(action = "setOfficial")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "setOfficial", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.SetOfficial")
    @ResponseWrapper(localName = "setOfficialResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.SetOfficialResponse")
    SetOfficialResult setOfficial(
            @WebParam(name = "setOfficialArgument", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    SetOfficialArgument setOfficialArgument);

    /**
     * 
     * @param linkId
     * @return
     *     returns com.brandmaker.webservices.mediapool.ExternalDownloadLink
     */
    @WebMethod(action = "findExternalDownloadLinkById")
    @WebResult(name = "externalDownloadLink", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "findExternalDownloadLinkById", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.FindExternalDownloadLinkById")
    @ResponseWrapper(localName = "findExternalDownloadLinkByIdResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.FindExternalDownloadLinkByIdResponse")
    ExternalDownloadLink findExternalDownloadLinkById(
            @WebParam(name = "linkId", targetNamespace = "")
                    Integer linkId);

    /**
     * 
     * @param uploadMediaData
     * @return
     *     returns com.brandmaker.webservices.mediapool.UploadMediaResult
     */
    @WebMethod(action = "uploadMedia")
    @WebResult(targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
    @RequestWrapper(localName = "uploadMedia", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMedia")
    @ResponseWrapper(localName = "uploadMediaResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.UploadMediaResponse")
    UploadMediaResult uploadMedia(
            @WebParam(name = "uploadMediaData", targetNamespace = "http://brandmaker.com/webservices/MediaPool/")
                    UploadMediaArgument uploadMediaData);

    /**
     * 
     * @param mediaGuid
     */
    @WebMethod(action = "deleteExternalDownloadLinkByMediaGuid")
    @RequestWrapper(localName = "deleteExternalDownloadLinkByMediaGuid", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteExternalDownloadLinkByMediaGuid")
    @ResponseWrapper(localName = "deleteExternalDownloadLinkByMediaGuidResponse", targetNamespace = "http://brandmaker.com/webservices/MediaPool/", className = "com.brandmaker.webservices.mediapool.DeleteExternalDownloadLinkByMediaGuidResponse")
    void deleteExternalDownloadLinkByMediaGuid(
            @WebParam(name = "mediaGuid", targetNamespace = "")
                    Integer mediaGuid);

}
